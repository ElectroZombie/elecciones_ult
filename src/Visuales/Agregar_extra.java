/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visuales;

import Clases_De_Proyecto.Candidato;
import Clases_De_Proyecto.Elecc;
import Base_de_Datos.Gestion;
import Utiles.Sonido;
import Utiles.Entero;
import Utiles.Tupla;
import Operaciones.Operaciones_de_candidatos;
import Utiles.Bloqueo;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author SchWarZer
 */
public class Agregar_extra extends javax.swing.JFrame {

    private Elecc E;
    private boolean flag;
    private Vector<Tupla<Candidato, Tupla<Entero, Entero>>> V;
    private Gestion G = new Gestion();
    private Bloqueo BLO;
    /**
     * Creates new form Agregar_extra
     * @param E
     * @param flag
     * @param BLO
     */
    public Agregar_extra(Elecc E, boolean flag, Bloqueo BLO) {
        initComponents();
 this.setLocationRelativeTo(null);
        this.E = E;
        this.flag = flag;
        this.BLO = BLO;
        BLO.bloquear_A();

        if(flag){
            llenar_lista_opcion_1();
        this.setTitle("Elección "+": Habilitar Candidatos");
            EtiquetaC.setVisible(false);
            EtiquetaP.setVisible(false);
            EtiquetaB.setVisible(false);
            EtiquetaI.setVisible(false);
            VotosC.setVisible(false);
            VotosP.setVisible(false);
            VotosB.setVisible(false);
            VotosI.setVisible(false);
            Agregar.setVisible(false);
            Quitar.setVisible(false);
        }
        else{
        this.setTitle("Elección "+": Agregar Votos Extra");

            try{
            String X = JOptionPane.showInputDialog(null, "Introduzca la cantidad total de votos");
            if(Integer.parseInt(X) < 0){
                throw new NumberFormatException();
            }
            E.setVotos(E.getVotos() + Integer.parseInt(X));
            V = Operaciones_de_candidatos.organizar_candidatos_por_votos(E, 0);
            G.agregar_cantidad_de_votos(E);
            
            Habilitar.setSelected(false);
            Habilitar.setText("Habilitar otros votos");
            
            EtiquetaB.setVisible(false);
            EtiquetaI.setVisible(false);
            VotosB.setVisible(false);
            VotosI.setVisible(false);
            
            llenar_lista_opcion_2();
            }catch(HeadlessException | NumberFormatException e){
                JOptionPane.showMessageDialog(null, "No ha introducido un número");
            }
        }
    }
    
    
    private void llenar_lista_opcion_1(){
        for(int i = 0; i < E.getNombres_extra().size(); i++){
            Lista.addItem(E.getNombres_extra().elementAt(i).getN1().getNombre());
        }
        if(E.getNombres_extra().elementAt(0).getN2().getEntero() == 1){
            Habilitar.setSelected(true);
        }
        else{
            Habilitar.setSelected(false);
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Lista = new javax.swing.JComboBox<>();
        Habilitar = new javax.swing.JRadioButton();
        VotosC = new javax.swing.JTextField();
        VotosP = new javax.swing.JTextField();
        EtiquetaC = new javax.swing.JLabel();
        EtiquetaP = new javax.swing.JLabel();
        Aceptar = new javax.swing.JButton();
        Agregar = new javax.swing.JButton();
        Quitar = new javax.swing.JButton();
        EtiquetaB = new javax.swing.JLabel();
        EtiquetaI = new javax.swing.JLabel();
        VotosB = new javax.swing.JTextField();
        VotosI = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Lista.setBackground(new java.awt.Color(51, 102, 255));
        Lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaActionPerformed(evt);
            }
        });
        jPanel1.add(Lista, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        Habilitar.setBackground(new java.awt.Color(153, 153, 153));
        Habilitar.setForeground(new java.awt.Color(0, 0, 0));
        Habilitar.setText("Habilitar");
        Habilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HabilitarActionPerformed(evt);
            }
        });
        jPanel1.add(Habilitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 13, -1, -1));

        VotosC.setBackground(new java.awt.Color(255, 255, 255));
        VotosC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VotosCKeyReleased(evt);
            }
        });
        jPanel1.add(VotosC, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 163, 98, -1));

        VotosP.setBackground(new java.awt.Color(255, 255, 255));
        VotosP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VotosPKeyReleased(evt);
            }
        });
        jPanel1.add(VotosP, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 163, 102, -1));

        EtiquetaC.setForeground(new java.awt.Color(0, 0, 0));
        EtiquetaC.setText("Votos por candidato");
        jPanel1.add(EtiquetaC, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 136, -1, -1));

        EtiquetaP.setForeground(new java.awt.Color(0, 0, 0));
        EtiquetaP.setText("Votos por presidente");
        jPanel1.add(EtiquetaP, new org.netbeans.lib.awtextra.AbsoluteConstraints(128, 136, -1, -1));

        Aceptar.setBackground(new java.awt.Color(102, 102, 102));
        Aceptar.setText("Aceptar");
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });
        jPanel1.add(Aceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 200, -1, -1));

        Agregar.setBackground(new java.awt.Color(102, 102, 102));
        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });
        jPanel1.add(Agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        Quitar.setBackground(new java.awt.Color(102, 102, 102));
        Quitar.setText("Quitar");
        Quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarActionPerformed(evt);
            }
        });
        jPanel1.add(Quitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));

        EtiquetaB.setForeground(new java.awt.Color(0, 0, 0));
        EtiquetaB.setText("Votos en blanco");
        jPanel1.add(EtiquetaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, -1, -1));

        EtiquetaI.setForeground(new java.awt.Color(0, 0, 0));
        EtiquetaI.setText("Votos inválidos");
        jPanel1.add(EtiquetaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, -1, -1));

        VotosB.setBackground(new java.awt.Color(255, 255, 255));
        VotosB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VotosBKeyReleased(evt);
            }
        });
        jPanel1.add(VotosB, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 79, -1));

        VotosI.setBackground(new java.awt.Color(255, 255, 255));
        VotosI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VotosIKeyReleased(evt);
            }
        });
        jPanel1.add(VotosI, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 74, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaActionPerformed
        if(flag){
        if(E.getNombres_extra().elementAt(Lista.getSelectedIndex()).getN2().getEntero() == 0){
            Habilitar.setSelected(false);
        }
        else{
            Habilitar.setSelected(true);
        }
        }
        else{
            VotosC.setText("");
            VotosP.setText("");
            VotosB.setText("");
            VotosI.setText("");
        }
    }//GEN-LAST:event_ListaActionPerformed

    private void HabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HabilitarActionPerformed
        if(flag){
        if(!Habilitar.isSelected()){
            E.getNombres_extra().elementAt(Lista.getSelectedIndex()).getN2().setEntero(0);
        }
        else{
            E.getNombres_extra().elementAt(Lista.getSelectedIndex()).getN2().setEntero(1);
        }
        }
        else{
            if(Habilitar.isSelected()){
            EtiquetaC.setVisible(false);
            EtiquetaP.setVisible(false);
            EtiquetaB.setVisible(true);
            EtiquetaI.setVisible(true);
            VotosC.setVisible(false);
            VotosP.setVisible(false);
            VotosB.setVisible(true);
            VotosI.setVisible(true);
            Lista.setVisible(false);
            }
            else{
            EtiquetaC.setVisible(true);
            EtiquetaP.setVisible(true);
            EtiquetaB.setVisible(false);
            EtiquetaI.setVisible(false);
            VotosC.setVisible(true);
            VotosP.setVisible(true);
            VotosB.setVisible(false);
            VotosI.setVisible(false);
            Lista.setVisible(true);
            }
        }
    }//GEN-LAST:event_HabilitarActionPerformed

    private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
       BLO.desbloquear_A();
        this.dispose();
    }//GEN-LAST:event_AceptarActionPerformed

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        Agregar(true);
        VotosC.setText("");
        VotosP.setText("");
        VotosB.setText("");
        VotosI.setText("");
    }//GEN-LAST:event_AgregarActionPerformed

    private void QuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarActionPerformed
        Agregar(false);
        VotosC.setText("");
        VotosP.setText("");
        VotosB.setText("");
        VotosI.setText("");
    }//GEN-LAST:event_QuitarActionPerformed

    private void VotosCKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VotosCKeyReleased
 char X = evt.getKeyChar();
        borrarLetras(X, VotosC);
    }//GEN-LAST:event_VotosCKeyReleased

    private void VotosPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VotosPKeyReleased
 char X = evt.getKeyChar();
        borrarLetras(X, VotosP);
    }//GEN-LAST:event_VotosPKeyReleased

    private void VotosBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VotosBKeyReleased
        char X = evt.getKeyChar();
        borrarLetras(X, VotosB);
    }//GEN-LAST:event_VotosBKeyReleased

    private void VotosIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VotosIKeyReleased
        char X = evt.getKeyChar();
        borrarLetras(X, VotosI);
    }//GEN-LAST:event_VotosIKeyReleased

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if(Lista.getItemCount() == 0){
           BLO.desbloquear_A();
            dispose();
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        BLO.desbloquear_A();
    }//GEN-LAST:event_formWindowClosed

    
    private void Agregar(boolean X){
        
        Sonido S = new Sonido();
        S.sonido("audio");
        
        int VC = 0;
        int VP = 0;
        int VB = 0;
        int VI = 0;
        
        if(!VotosC.getText().equals("")){
            VC = Integer.parseInt(VotosC.getText());
        }
        
        if(!VotosP.getText().equals("")){
        VP = Integer.parseInt(VotosP.getText());
        }
        
         if(!VotosB.getText().equals("")){
        VB = Integer.parseInt(VotosB.getText());
        }
         
          if(!VotosI.getText().equals("")){
        VI = Integer.parseInt(VotosI.getText());
        }
        
        E.setCantidad_de_boletas_en_blanco(E.getCantidad_de_boletas_en_blanco()+VB);
        E.setCantidad_de_boletas_invalidas(E.getCantidad_de_boletas_invalidas()+VI);
        G.agregar_votos(E, VC, VP, VB, VI, V.elementAt(Lista.getSelectedIndex()).getN1(), X);
    }
    
    private void borrarLetras(char X, JTextField texto){
        if(X==KeyEvent.CHAR_UNDEFINED||X=='\b'
                || X=='\n'){
                                 return; 
        }
        
        String Xs = texto.getText();
        int t=0;
        try {
            int x = Integer.parseInt("" + X);
        } catch (NumberFormatException e) {
            do{
           t = Xs.indexOf(X+"");
           if(t==-1){
               break;
           }
          String x1 = Xs.substring(0, t);
          String x2 = Xs.substring(t+1);
          Xs = x1+x2;
          texto.setText(x1+x2);
            }while(1==1);
        }
        
        }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Agregar;
    private javax.swing.JLabel EtiquetaB;
    private javax.swing.JLabel EtiquetaC;
    private javax.swing.JLabel EtiquetaI;
    private javax.swing.JLabel EtiquetaP;
    private javax.swing.JRadioButton Habilitar;
    private javax.swing.JComboBox<String> Lista;
    private javax.swing.JButton Quitar;
    private javax.swing.JTextField VotosB;
    private javax.swing.JTextField VotosC;
    private javax.swing.JTextField VotosI;
    private javax.swing.JTextField VotosP;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private void llenar_lista_opcion_2() {
        for(int i = 0; i < V.size(); i++){
            Lista.addItem(V.elementAt(i).getN1().getNombre());
        }
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/eleccion.png"));
        return retValue;

    }
}
